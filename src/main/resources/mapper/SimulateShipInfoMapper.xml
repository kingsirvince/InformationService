<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.project.dao.SimulateShipInfoMapper">
  <resultMap id="BaseResultMap" type="com.company.project.model.SimulateShipInfo">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Ship_MMSI" jdbcType="INTEGER" property="shipMmsi" />
    <result column="Ship_call" jdbcType="VARCHAR" property="shipCall" />
    <result column="Ship_class" jdbcType="VARCHAR" property="shipClass" />
    <result column="Ship_state" jdbcType="VARCHAR" property="shipState" />
    <result column="Ship_longitude" jdbcType="DECIMAL" property="shipLongitude" />
    <result column="Ship_latitude" jdbcType="DECIMAL" property="shipLatitude" />
    <result column="Ship_length" jdbcType="VARCHAR" property="shipLength" />
    <result column="Ship_width" jdbcType="VARCHAR" property="shipWidth" />
    <result column="Ship_heading" jdbcType="VARCHAR" property="shipHeading" />
    <result column="Ship_speed" jdbcType="VARCHAR" property="shipSpeed" />
    <result column="Ship_draught" jdbcType="VARCHAR" property="shipDraught" />
    <result column="Ship_load" jdbcType="VARCHAR" property="shipLoad" />
    <result column="Datetime" jdbcType="TIMESTAMP" property="datetime" />
    <result column="Channel_division_ID" jdbcType="VARCHAR" property="channelDivisionId" />
  </resultMap>

  <resultMap id="IdLongLatResultMap" type="com.company.project.model.other.SimulateShipInfoIdLongLat">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="Ship_longitude" jdbcType="DECIMAL" property="shipLongitude" />
    <result column="Ship_latitude" jdbcType="DECIMAL" property="shipLatitude" />
  </resultMap>

  
  <!--快速查询行总数-->
  <select id="rowCount" resultType="java.lang.Integer">
    select ifnull(max(id),0)-ifnull(min(id),0)+1 as rows from `simulate_ship_info`
  </select>

    <!--更新船舶方向,不同类型的parameterType，就用@Param解决，不用写parameterType了-->
    <update id="updateAngleSpeed" >
        update simulate_ship_info  set Ship_heading = #{angleString}, Ship_speed= #{speedString} where id = #{id}
    </update>

<!--  根据id更新船的 经纬度、方向、速度-->
<update id="updateLongLatAngleSpeed">
  update simulate_ship_info  set Ship_longitude=#{longitude}, Ship_latitude=#{latitude},Ship_heading = #{angleString}, Ship_speed= #{speedString} where id = #{id}
</update>

  <!--  static 根据id更新船的 经纬度、方向、速度-->
  <update id="insertLongLatAngleSpeedToStatic">
  insert into ship_info_static  (id,Ship_longitude, Ship_latitude,Ship_heading, Ship_speed)
  VALUES
 (#{id}, #{longitude},#{latitude},#{angleString},#{speedString})
</update>

  <!--  demo01 根据id更新船的 经纬度、方向、速度-->
  <update id="insertLongLatAngleSpeedToDemo">
  insert into ${demoStaticName}  (id,Ship_longitude, Ship_latitude,Ship_heading, Ship_speed)
  VALUES
 (#{id}, #{longitude},#{latitude},#{angleString},#{speedString})
</update>

<!--将所有轨迹点14400/720，得到20个点，然后每次加num的间隔频率。查询结果加自增序列i。更新模拟船舶的id=c.i 20条配20条-->
<!--  <update id="updateCH02601" parameterType="com.company.project.model.SimulateShipInfo">
UPDATE simulate_ship_info s
LEFT JOIN (
select (@i:=@i+1) i ,id,CH02601_long,CH02601_lat  from channel_point  , (SELECT @i:=0) AS i where id%#{divisor}=#{remainder}  ) c
on s.id = (c.i-#{subtract} ) set s.Ship_longitude=c.CH02601_long , s.Ship_latitude=c.CH02601_lat;
</update>-->
  <!--废弃-->
  <!--将idPoint行的经纬度，更新给mmsi的模拟船舶-->
  <update id="simulateCH02601" parameterType="com.company.project.model.SimulateShipInfo">
  UPDATE  simulate_ship_info s
LEFT JOIN
        channel_point  c
ON      s.Ship_MMSI = #{mmsi}
SET     s.Ship_longitude = c.CH02601_long , s.Ship_latitude = c.CH02601_lat
WHERE   c.id = #{idPoint}
</update>
  <!--  废弃-->
  <!--基础方法，将idPoint行的经纬度，更新给mmsi的模拟船舶-->
  <update id="simulateShipUpdatePosition" parameterType="com.company.project.model.SimulateShipInfo">
  UPDATE  simulate_ship_info s
LEFT JOIN
        ${ShipTrack}  c
ON      s.Ship_MMSI = #{mmsi}
SET     s.Ship_longitude = c.longitude , s.Ship_latitude = c.latitude
WHERE   c.id = #{idPoint}
</update>
  <!--废弃-->
  <!--将经纬度取出计算方向-->
  <select id="getIdLongLat" resultMap="IdLongLatResultMap">
    select ID,Ship_longitude,Ship_latitude from `simulate_ship_info`
  </select>
  <!--  废弃-->
  <!--将经度取出计算方向-->
  <select id="getLong" resultType="java.lang.Double">
    select Ship_longitude from `simulate_ship_info`
  </select>
  <!--将纬度取出计算方向-->
  <select id="getLat" resultType="java.lang.Double">
    select Ship_latitude from `simulate_ship_info`
  </select>
</mapper>